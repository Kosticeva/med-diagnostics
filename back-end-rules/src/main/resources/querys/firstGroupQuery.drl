//created on: Jun 12, 2018
package querys

import drools.model.Link;
import drools.model.Symptom;
import drools.model.Disease;
import java.util.List;

global List<Symptom> sympCont;

rule "All diseases for symptom"
	agenda-group "symptom-bc"
	//salience $c.size()
    when
       	$s: Symptom()
       	//$c: List() from accumulate(
       		isSymptomOf(disease, $s, type; )
       //		collectList(disease)
       	//)
    then
    	//for(int i=0; i<$c.size(); i++){
        	//System.out.println($s.getName() + " je simptom " + $c.get(i));
			System.out.println($s.getName() + " je simptom " + disease);
        	insert(disease);
    	//}
end

query isSymptomOf(Disease d, Symptom s, int type)
	Link(d, s, type; )
end

rule "All spec symptoms for disease"
	agenda-group "disease-bc"
	salience 500
	when
       	$d: Disease()
       	isSymptomOf($d, symptom, 1;)
    then
		System.out.println("simptom: "+symptom.getName());
		System.out.println("disease: "+$d);
        System.out.println(symptom.getName() + " uzrokuje " + $d.getName());
		if(sympCont == null){
			System.out.println("Kontejner je nula :/");
		}else{
			for(Object ss: sympCont){
				System.out.print(ss+", ");
			}
        	sympCont.add(symptom);
		}
		
end

rule "All gen symptoms for disease"
	agenda-group "disease-bc"
	salience 200
	when
		$d: Disease()
		isSymptomOf($d, symptom, 0;)
	then
        System.out.println("simptom: "+symptom.getName());
		System.out.println("disease: "+$d);
        System.out.println(symptom.getName() + " uzrokuje " + $d.getName());
		if(sympCont == null){
			System.out.println("Kontejner je nula :/");
		}else{
			for(Object ss: sympCont){
				System.out.print(ss+", ");
			}
        	sympCont.add(symptom);
		}
end
	
